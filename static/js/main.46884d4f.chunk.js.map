{"version":3,"sources":["logo.svg","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","list","name","MenuItem","text","selected","className","Menu","map","el","key","onClick","console","log","Arrow","ArrowLeft","ArrowRight","App","props","state","alignCenter","clickWhenDrag","dragging","hideArrows","hideSingleArrow","itemsCount","length","scrollToSelected","translate","undefined","transition","wheel","showList","inertiascrolling","slowdownFactor","onUpdate","setState","onFirstItemVisible","onLastItemVisible","newItems","Array","fill","ind","concat","menuItems","slice","onSelect","setItemsCount","ev","val","target","value","itemsCountNew","isNaN","setSlowdownFactor","setSelected","String","toggle","menu","prevProps","prevState","this","setInitial","forceUpdate","checkboxStyle","margin","valueStyle","display","src","logo","alt","arrowLeft","arrowRight","data","inertiaScrolling","inertiaScrollingSlowdown","ref","rtl","scrollBy","useButtonRole","style","type","checked","onChange","toFixed","min","max","rel","href","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.46884d4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from './logo.svg';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport './App.css';\n\nlet list = [\n  { name: 'item1' },\n  { name: 'item2______________' },\n  { name: 'item3' },\n  { name: 'item4' },\n  { name: 'item5' },\n  { name: 'item6' },\n  { name: 'item7______________' },\n  { name: 'item8' },\n  { name: 'item9' },\n  { name: 'item10' },\n  { name: 'item11' },\n  { name: 'item12' },\n  { name: 'item13' },\n  { name: 'item14______________' },\n  { name: 'item15' },\n  { name: 'item16' },\n  { name: 'item17' },\n  { name: 'item18' },\n  { name: 'item19' },\n  { name: 'item20' },\n  { name: 'item21' },\n  { name: 'item22______________' },\n  { name: 'item23' },\n  { name: 'item24' },\n  { name: 'item25' },\n];\n\n// eslint-disable-next-line react/prop-types\nconst MenuItem = ({ text, selected }) => {\n  return <div className={`menu-item ${selected ? 'active' : ''}`}>{text}</div>;\n};\n\nexport const Menu = (list, selected) =>\n  list.map(el => {\n    const { name } = el;\n    const onClick = () => console.log('original onClick ', name);\n    return (\n      <MenuItem text={name} key={name} selected={selected} onClick={onClick} />\n    );\n  });\n\nconst Arrow = ({ text, className }) => {\n  return <div className={className}>{text}</div>;\n};\nArrow.propTypes = {\n  text: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport const ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\nexport const ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\n\nclass App extends Component {\n  state = {\n    alignCenter: true,\n    clickWhenDrag: false,\n    dragging: true,\n    hideArrows: true,\n    hideSingleArrow: true,\n    itemsCount: list.length,\n    selected: 'item1',\n    scrollToSelected: false,\n    translate: undefined,\n    transition: 0.4,\n    wheel: true,\n    showList: true,\n    inertiascrolling: false,\n    slowdownFactor: 0.25,\n  };\n\n  constructor(props) {\n    super(props);\n    this.menu = null;\n    this.menuItems = Menu(list.slice(0, list.length), this.state.selected);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { alignCenter } = prevState;\n    const { alignCenter: alignCenterNew } = this.state;\n    if (alignCenter !== alignCenterNew && this.menu) {\n      this.menu.setInitial();\n      this.menu.forceUpdate();\n      this.forceUpdate();\n    }\n  }\n\n  onUpdate = ({ translate }) => {\n    console.log(`onUpdate: translate: ${translate}`);\n    this.setState({ translate });\n  };\n\n  onFirstItemVisible = () => {\n    console.log('first item is visible');\n  };\n\n  onLastItemVisible = () => {\n    console.log('last item is visible');\n\n    const newItems = Array(5)\n      .fill(1)\n      .map((el, ind) => ({ name: `item${list.length + ind + 1}` }));\n    list = list.concat(newItems)\n    this.menuItems = Menu(\n      list,\n      list.slice(-1)[0].name,\n    );\n    this.setState({\n      itemsCount: list.length,\n      selected: this.state.selected,\n    });\n  };\n\n  onSelect = key => {\n    console.log(`onSelect: ${key}`);\n    this.setState({ selected: key });\n  };\n\n  setItemsCount = ev => {\n    const { itemsCount = list.length, selected } = this.state;\n    const val = +ev.target.value;\n    const itemsCountNew =\n      !isNaN(val) && val <= list.length && val >= 0\n        ? +ev.target.value\n        : list.length;\n    const itemsCountChanged = itemsCount !== itemsCountNew;\n\n    if (itemsCountChanged) {\n      this.menuItems = Menu(list.slice(0, itemsCountNew), selected);\n      this.setState({\n        itemsCount: itemsCountNew,\n      });\n    }\n  };\n\n  setSlowdownFactor = ev => {\n    this.setState({ slowdownFactor: ev.target.value });\n  };\n\n  setSelected = ev => {\n    const { value } = ev.target;\n    this.setState({ selected: String(value) });\n  };\n\n  toggle = () => {\n    this.setState({ showList: !this.state.showList });\n  };\n\n  render() {\n    const {\n      alignCenter,\n      clickWhenDrag,\n      hideArrows,\n      dragging,\n      hideSingleArrow,\n      itemsCount,\n      selected,\n      translate,\n      transition,\n      wheel,\n      showList,\n      scrollToSelected,\n      inertiascrolling,\n      slowdownFactor,\n    } = this.state;\n\n    const menu = this.menuItems;\n\n    const checkboxStyle = {\n      margin: '5px 10px',\n    };\n    const valueStyle = {\n      margin: '5px 10px',\n      display: 'inline-block',\n    };\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">React horizontal scrolling menu</h1>\n        </header>\n        <p className=\"App-intro\">\n          Horizontal scrolling menu example. Click arrow or drag items.\n        </p>\n\n        <button onClick={this.toggle}>Toggle Show/hide</button>\n\n        {showList && (\n          <ScrollMenu\n            alignCenter={alignCenter}\n            arrowLeft={ArrowLeft}\n            arrowRight={ArrowRight}\n            clickWhenDrag={clickWhenDrag}\n            data={menu}\n            dragging={dragging}\n            hideArrows={hideArrows}\n            hideSingleArrow={hideSingleArrow}\n            inertiaScrolling={inertiascrolling}\n            inertiaScrollingSlowdown={slowdownFactor}\n            onFirstItemVisible={this.onFirstItemVisible}\n            onLastItemVisible={this.onLastItemVisible}\n            onSelect={this.onSelect}\n            onUpdate={this.onUpdate}\n            ref={el => (this.menu = el)}\n            rtl={false}\n            scrollBy={0}\n            scrollToSelected={scrollToSelected}\n            selected={selected}\n            transition={+transition}\n            translate={translate}\n            useButtonRole={true}\n            wheel={wheel}\n          />\n        )}\n\n        <form className=\"properties\">\n          <label style={checkboxStyle}>\n            Align center\n            <input\n              name=\"alignCenter\"\n              type=\"checkbox\"\n              checked={alignCenter}\n              onChange={() => this.setState({ alignCenter: !alignCenter })}\n            />\n          </label>\n          <label style={checkboxStyle}>\n            Dragging\n            <input\n              name=\"dragging\"\n              type=\"checkbox\"\n              checked={dragging}\n              onChange={() => this.setState({ dragging: !dragging })}\n            />\n          </label>\n          <label style={checkboxStyle}>\n            Click when drag end\n            <input\n              name=\"clickWhenDrag\"\n              type=\"checkbox\"\n              checked={clickWhenDrag}\n              onChange={() => this.setState({ clickWhenDrag: !clickWhenDrag })}\n            />\n          </label>\n          <label style={checkboxStyle}>\n            Scroll to selected item\n            <input\n              name=\"scrollToSelected\"\n              type=\"checkbox\"\n              checked={scrollToSelected}\n              onChange={() =>\n                this.setState({ scrollToSelected: !scrollToSelected })\n              }\n            />\n          </label>\n          <label style={checkboxStyle}>\n            Use mouse wheel\n            <input\n              name=\"wheel\"\n              type=\"checkbox\"\n              checked={wheel}\n              onChange={() => this.setState({ wheel: !wheel })}\n            />\n          </label>\n          <label style={checkboxStyle}>\n            Hide arrows if items width less than menu width\n            <input\n              name=\"hideArrows\"\n              type=\"checkbox\"\n              checked={hideArrows}\n              onChange={() => this.setState({ hideArrows: !hideArrows })}\n            />\n          </label>\n          <label style={checkboxStyle}>\n            Hide left/right arrows if first/last item visible\n            <input\n              name=\"hideSingleArrow\"\n              type=\"checkbox\"\n              checked={hideSingleArrow}\n              onChange={() =>\n                this.setState({ hideSingleArrow: !hideSingleArrow })\n              }\n            />\n          </label>\n          <br />\n          <div style={valueStyle}>Translate: {(translate || 0).toFixed(2)}</div>\n          <label style={valueStyle}>\n            Selected:\n            <input\n              style={{ margin: '0 5px' }}\n              name=\"selected\"\n              type=\"text\"\n              value={selected}\n              onChange={this.setSelected}\n            />\n          </label>\n          <label style={valueStyle}>\n            Transition duration:\n            <input\n              style={{ margin: '0 5px' }}\n              name=\"transition\"\n              type=\"number\"\n              value={transition || 0}\n              min={0}\n              max={10}\n              onChange={ev =>\n                this.setState({\n                  transition: !isNaN(+ev.target.value) ? +ev.target.value : 0,\n                })\n              }\n            />\n          </label>\n          <label style={valueStyle}>\n            Items count:\n            <input\n              style={{ margin: '0 5px' }}\n              name=\"itemsCount\"\n              type=\"number\"\n              value={itemsCount}\n              min={0}\n              max={list.length}\n              onChange={this.setItemsCount}\n            />\n          </label>\n          <label style={checkboxStyle}>\n            Inertia Scrolling\n            <input\n              name=\"inertiascrolling\"\n              type=\"checkbox\"\n              checked={inertiascrolling}\n              onChange={() =>\n                this.setState({ inertiascrolling: !inertiascrolling })\n              }\n            />\n          </label>\n          <label style={valueStyle}>\n            Inertia scrolling slowdown:\n            <input\n              style={{ margin: '0 5px' }}\n              name=\"slowdownFactor\"\n              type=\"number\"\n              value={slowdownFactor}\n              onChange={this.setSlowdownFactor}\n            />\n          </label>\n        </form>\n        <hr />\n        <div>\n          <a\n            /* eslint-disable react/jsx-no-target-blank */\n            target=\"_blank\"\n            rel=\"noopener\"\n            href=\"https://github.com/asmyshlyaev177/react-horizontal-scrolling-menu\"\n          >\n            Project on GitHub\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}